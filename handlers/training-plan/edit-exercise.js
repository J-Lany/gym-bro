export async function handleEditExercise(ctx, training, exIndex) {
  ctx.session.state = 'EDITING_EX';
  ctx.session.editingIndex = exIndex;

  await ctx.reply('–ß—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:\n1. –ü–æ–¥—Ö–æ–¥—ã\n2. –ü–æ–≤—Ç–æ—Ä—ã\n3. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', {
    reply_markup: {
      inline_keyboard: [
        [
          { text: '‚úèÔ∏è –ü–æ–¥—Ö–æ–¥—ã', callback_data: 'edit:sets' },
          { text: '‚úèÔ∏è –ü–æ–≤—Ç–æ—Ä—ã', callback_data: 'edit:reps' },
        ],
        [{ text: '‚úèÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', callback_data: 'edit:comment' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'fsm:back' }],
      ],
    },
  });
}

export async function applyEdit(ctx, field, value) {
  const training = ctx.session.currentTraining;
  const idx = ctx.session.editingIndex;
  training.exercises[idx][field] = value;

  ctx.session.state = 'await_exercise_option';
  await ctx.reply('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
}
